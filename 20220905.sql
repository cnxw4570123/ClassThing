-- 한줄 주석
/*
여러줄
주석
*/

-- 계정 생성
-- CREATE USER 아이디 IDENTIFIED BY "비밀번호";
-- 공통 사용자 해제
ALTER SESSION SET "_ORACLE_SCRIPT" =TRUE;
CREATE USER c##TESTID IDENTIFIED BY "1111"; --F9

CREATE USER TESTID02 IDENTIFIED BY "1111";

-- JGM_DEV 계정 생성
CREATE USER JGM_DEV IDENTIFIED BY "1111";

-- JGM_DEV 계정 DB 접속 시도 - 접속 권한 X
-- 관리자 계정으로 JGM_DEV 계정 접속권한 부여
-- GRANT 부여할 권한 TO 계정명;
GRANT CREATE SESSION TO JGM_DEV;

CREATE USER TESTID02 IDENTIFIED BY "1111";

ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE;
CREATE USER JGM_DEV IDENTIFIED BY "1111";

/* 계정 생성 >> 권한 부여 */

/* 권한 회수 >> 계정 삭제 */
REVOKE CREATE SESSION FROM JGM_DEV;
-- REVOKE 성공

/* 계정 삭제*/
DROP USER JGM_DEV;
-- 삭제후 접속 시도 >> 상태: -테스트 실패: ORA-01017: 사용자명/비밀번호가 부적합, 로그온할 수 없습니다. 


-- 계정 생성 >> 개발자 계정에 접속 권한 부여
-- 개발자 계정으로 접속 >> 테이블 생성.
/* 1. 개발자 계정 생성*/
CREATE USER JGM_DEV IDENTIFIED BY "1111"; --관리자 계정으로 실행

/* 2. 접속 권한 부여*/
GRANT CREATE SESSION TO JGM_DEV; -- 관리자 계정으로 실행
/* 3. 개발자 계정으로 접속*/
/* 4. 테이블 생성*/
CREATE TABLE TEST_TBL(
    TEST_COL1 NUMBER,
    TEST_COL2 NVARCHAR2(5)
);


GRANT CREATE TABLE TO JGM_DEV;
/* 개발자 계정으로 접속  */
CREATE TABLE TEST_TBL(
    TEST_COL1 NUMBER,
    TEST_COL2 NVARCHAR2(5)
);
INSERT INTO TEST_TBL VALUES(100, '테스트'); -- JGM_DEV 계정으로 실행
    -- ORA-01950: 테이블스페이스 'USERS'에 대한 권한이 없습니다.
    
/* 8. JGM_DEV 계정에 테이블스페이스 'USERS'에 대한 권한 부여*/

-- alter user jgm_dev identified by "1234"; 비밀번호 변경

ALTER USER JGM_DEV
QUOTA UNLIMITED ON USERS;

/* 9. 생성된 테이블에 데이터 입력 재시도*/
INSERT INTO TEST_TBL VALUES(100, '테스트'); -- JGM_DEV 계정으로 실행
    -- 1 행 이(가) 삽입되었습니다.
    
COMMIT; -- JGM_DEV 계정으로 실행
    -- 커밋 완료
    
/* 관리자 계정으로 접속 */
/* JGM_DEV2 계정 생성 */

CREATE USER JGM_DEV2 IDENTIFIED BY "1111"
QUOTA UNLIMITED ON USERS;

/* 권한 부여(접속, 테이블 생성)*/
GRANT CREATE SESSION, CREATE TABLE TO JGM_DEV2;

CREATE TABLE TEST_TBL2(
    TEST_COL1 NUMBER
);

COMMIT;

/* 관리자 계정으로 접속, JGM_DEV, JGM_DEV2 */
ALTER USER JGM_DEV
QUOTA 0 ON USERS; -- 관리자 계정으로 실행

/* ROLE */

CREATE USER JGM_DEV3 IDENTIFIED BY "1111"
QUOTA UNLIMITED ON USERS; -- 관리자 계정으로 실행

GRANT CONNECT TO JGM_DEV3; --CONNECT :: CREATE SESSION
GRANT RESOURCE TO JGM_DEV3; -- RESOURCE

--JGM_DEV3으로 접속
CREATE TABLE TEST_TBL(
    TEST_COL1 NUMBER,
    TEST_COL2 NVARCHAR2(5)
);
INSERT INTO TEST_TBL VALUES(100, '테스트');

/* 관리자 권한으로 */
SELECT * FROM DBA_SYS_PRIVS
WHERE GRANTEE = 'RESOURCE';

/* JGM_DEV 계정 삭제 */
DROP USER JGM_DEV CASCADE;
DROP USER JGM_DEV2 CASCADE;
DROP USER JGM_DEV3 CASCADE;

/* JGM_DBA 계정 생성 */
CREATE USER JGM_DBA IDENTIFIED BY "1111";
GRANT DBA TO JGM_DBA;

/* JGM_DBA 계정으로 접속 */

CREATE TABLE TEST_TBL(
    TEST_COL NUMBER
);
INSERT INTO TEST_TBL VALUES(100);







/* 2022-09-02 */
/* JGM_DBA 계정 */

/* 테이블 생성 */

/*
테이블 생성 후 별도의 권한 없이도 입력은 가능하지만, 할당받은 공간이 없기 때문에 실제 입력은 불가능.

CREATE TABLE 테이블명(컬럼이름1 데이터타입, 컬럼이름2 데이터타입, ......);

*/
CREATE TABLE SCORES(
    STUNAME NVARCHAR2(5),
    JAVASCORE NUMBER,
    ORACLESCORE NUMBER,
    HTMLSCORE NUMBER
);

DESC SCORES;
/* 데이터 입력 */
/*
INSERT INTO 테이블명(컬럼명 1, 컬럼명 2, ....)
VALUES( 컬럼명 1에 입력할 값, 컬럼명 2에 입력할 값, ....);
*/

INSERT INTO SCORES(STUNAME, JAVASCORE, ORACLESCORE, HTMLSCORE)
VALUES('정균민', 80, 85, 90 );

SELECT * FROM SCORES
WHERE STUNAME = '정균민'
;

SELECT * FROM SCORES;

INSERT INTO SCORES (JAVASCORE, STUNAME, ORACLESCORE, HTMLSCORE)
VALUES(100, '박민서', 100, 100 );


INSERT INTO SCORES(STUNAME, JAVASCORE, HTMLSCORE)
VALUES('정균민', 80, 90 );

INSERT INTO SCORES
VALUES('정균민', 80, 90 );

/* 학생 정보(STUINFO) 테이블 */
/* 학생이름, 학교이름, 전화번호 */

CREATE TABLE STUINFO(
    STUNAME NVARCHAR2(5),
    SCHNAME NVARCHAR2(10),
    TEL     NVARCHAR2(13),
    BIRTHDATE NVARCHAR2(7)
);

INSERT INTO STUINFO VALUES('정균민', '인하대학교', '010-5362-8640', '19960812');

SELECT * FROM STUINFO;

-- DELETE FROM STUINFO WHERE STUNAME = '정균민'; 
ALTER TABLE STUINFO MODIFY BIRTHDATE VARCHAR2(10);


INSERT INTO STUINFO
VALUES('정균민', '인하대학교', '010-5362-8640', '960812');

DELETE FROM STUINFO WHERE BIRTHDATE ='960812';


/*전화번호부(PHONEBOOK) 
이름, 전화번호, 생년월일, 임시

숫자형, 문자형, 날짜형

*/

CREATE TABLE TEST_TBL01(
    TEST_COL1 CHAR(2),
    TEST_COL2 NCHAR(2)
);

INSERT INTO TEST_TBL01(TEST_COL1) VALUES('가');
INSERT INTO TEST_TBL01(TEST_COL2) VALUES('나');


SELECT * FROM TEST_TBL01;

DELETE FROM TEST_TBL01 WHERE TEST_COL2 = '나';

/*
문자형:
        [고정형]
        CHAR
        NCHAR(5)       >> 5글자 :: 'A' ===> [A][][][][]

        [가변형]
        VARCHAR
        NVARCHAR(5)    >> 5글자 :: 'A' ===> [A]
        
TBL01
정,균,민, , ,0,1,0,-.......
임,철,  , , ,0,1,0,-.......

TBL02
정,균,민, , ,0,1,0,-.......
임,철,  , , ,0,1,0,-....... 

*/

CREATE TABLE TESTTBL02(
    TESTNUM1 NUMBER,
    TESTNUM2 NUMBER(3),
    TESTNUM3 NUMBER(3, 2)
);


INSERT INTO TESTTBL02(TESTNUM2) VALUES(1);
-- 1 행 이(가) 삽입되었습니다.
INSERT INTO TESTTBL02(TESTNUM2) VALUES(11);
-- 1 행 이(가) 삽입되었습니다.
INSERT INTO TESTTBL02(TESTNUM2) VALUES(111);
-- 1 행 이(가) 삽입되었습니다.
INSERT INTO TESTTBL02(TESTNUM2) VALUES(1111);
-- ORA-01438: 이 열에 대해 지정된 전체 자릿수보다 큰 값이 허용됩니다.

INSERT INTO TESTTBL02(TESTNUM2) VALUES(1.11);
-- 1 행 이(가) 삽입되었습니다.
INSERT INTO TESTTBL02(TESTNUM2) VALUES(2.222);
-- 1 행 이(가) 삽입되었습니다.

INSERT INTO TESTTBL02(TESTNUM2) VALUES(333.33);
SELECT *FROM TESTTBL02;

INSERT INTO TESTTBL02(TESTNUM1) VALUES(1234.1234);
INSERT INTO TESTTBL02(TESTNUM1) VALUES(12345.12345);


INSERT INTO TESTTBL02(TESTNUM3) VALUES(1.1);
INSERT INTO TESTTBL02(TESTNUM3) VALUES(1.12);
INSERT INTO TESTTBL02(TESTNUM3) VALUES(1.123);
INSERT INTO TESTTBL02(TESTNUM3) VALUES(1.1234);

DELETE FROM TESTTBL02 WHERE TESTNUM1 = 1234.1234;

INSERT INTO TESTTBL02(TESTNUM3) VALUES(21.1);
INSERT INTO TESTTBL02(TESTNUM3) VALUES(21.12);
INSERT INTO TESTTBL02(TESTNUM3) VALUES(21.123);
INSERT INTO TESTTBL02(TESTNUM3) VALUES(21.1234);

/* 날짜형 (년월일 시분초)*/
CREATE TABLE TESTTBL03(
    TESTDATE DATE
);


INSERT INTO TESTTBL03 VALUES('2022-09-02');
--  1 행 이(가) 삽입되었습니다.
INSERT INTO TESTTBL03 VALUES('2022/09/03');
--  1 행 이(가) 삽입되었습니다.
INSERT INTO TESTTBL03 VALUES('2022AA');

-- INSERT INTO TESTTBL03 VALUES('2022/09/02 20:58:30');
INSERT INTO TESTTBL03 VALUES(TO_DATE('2022/09/02 20:58:30', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO TESTTBL03 VALUES(TO_DATE('2022/09/02', 'YYYY-MM-DD'));
INSERT INTO TESTTBL03 VALUES(SYSDATE);
SELECT *FROM TESTTBL03;
ROLLBACK;


INSERT INTO TESTTBL03 VALUES(SYSDATE - 1);

INSERT INTO TESTTBL03 VALUES(SYSDATE - 10);

INSERT INTO TESTTBL03 VALUES(SYSDATE - (1 / 24));

INSERT INTO TESTTBL03 VALUES(SYSDATE - (1 / 24));


SELECT *FROM TESTTBL03;

/*
전화번호부(PHONEBOOK)
이름, 전화번호, 생년월일
숫자형, 문자형, 날짜형
*/

CREATE TABLE PHONEBOOK(
    PNAME NVARCHAR2(5),
    PHONENUM NVARCHAR2(13),
    PBIRTH DATE
);

-- 날짜 타입의 데이터를 TOCHARACTER로 문자형으로 바꿀 수 있다.


/* 22/09/05 */
SELECT * FROM YKD_DBA.STUINFO;

/* 제약조건(CONSTRAINTS)
    1. PRIMARY KEY (기본키) PK :: UNIQUE + NOT NULL
    2. FOREIGN KEY (외래키) FK
    3. UNIQUE               UK
    4. NOT NULL             NN
    5. DEFAULT
    6. CHECK
*/

/* UNIQUE : 테이블에서 특정한 컬럼에 중복되는 값이 입력되지 않도록 방지 */
CREATE TABLE TEST_UNIQUE(
    PHNAME NVARCHAR2(5),
    PHNUM NVARCHAR2(13)
);

/* 
제약조건 추가 부여 
TEST_UNIQUE 테이블에 PHNUM 컬럼에 UNIQUE 부여


*/
ALTER TABLE TEST_UNIQUE 
ADD CONSTRAINT UQ_PHNUM UNIQUE(PHNAME);

INSERT INTO TEST_UNIQUE VALUES('정균민', '010-5362-8640');
INSERT INTO TEST_UNIQUE VALUES('정균민', '010-5361-8640');
-- ORA-00001: 무결성 제약 조건(SYS.UK_PHNUM)에 위배됩니다.

INSERT INTO TEST_UNIQUE VALUES('자바', '010-5361-8640');
SELECT * FROM TEST_UNIQUE;
COMMIT;

CREATE TABLE TEST_UNIQUE2(
    PHNAME2 NVARCHAR2(5),
    PHNUM2 NVARCHAR2(13) UNIQUE
);

INSERT INTO TEST_UNIQUE2 VALUES('자바', '010-1234-5678');
INSERT INTO TEST_UNIQUE2 VALUES('자바', '010-1234-5678');

SELECT * FROM USER_CONSTRAINTS;

/* 제약조건 삭제 */
ALTER TABLE TEST_UNIQUE
DROP CONSTRAINT UQ_PHNUM;

ALTER TABLE TEST_UNIQUE 
ADD CONSTRAINT UQ_PHNUM UNIQUE(PHNUM);


DELETE TEST_UNIQUE WHERE PHNUM = '010-5361-8640';

/*
1. 테이블 생성(CREATE TABLE) - 제약조건 부여(ALTER TABLE)
2. 생성과 동시에 컬럼에 제약조건 부여 
*/


CREATE TABLE TEST_UNIQUE3(
    PHNAME3 NVARCHAR2(5),
    PHNUM3 NVARCHAR2(13),
    CONSTRAINT UK_PHNUM3 UNIQUE (PHNUM3)
);

/* NOT NULL */











